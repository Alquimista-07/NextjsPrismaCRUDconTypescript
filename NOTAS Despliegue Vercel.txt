-----------------------------------------------------------------------------------------------------
						                DESPLIEGUE EN VERCEL
-----------------------------------------------------------------------------------------------------
Para el despliegue de nuestra aplicación vamos a usar un servicio gratuito que se llama Vercel,
el cual también está relacionado a NextJS ya es es la misma empresa que se encarga de desarrolarlo.

Por lo tanto a parte de desarrollar NextJS tiene un nube que nos permite desplegar aplicaciones y no
solo en NextJS sino que en otros frameworks también pero obviamente esta muy enfocada en NextJS.

Algo adicional es que Vercel en sus últimas actualizaciones ahora también permite desplegar bases de
datos en PostgeSQL lo que viene bastante bien para desplegar nuestro proyecto porque en este caso en
nuestra fase de desarrollo estuvimos usando el ORM Prisma con una base de datos en SQLite y esta no
es una base dedatos para mantener en producción.

Por lo tanto vamos a tener que configurar Prisma para que trabaje con PostgreSQL o cualquier otra base
de datos. Y esto es lo genial de manejar el ORM ya que no tenemos que cambiar código en la aplicación
sino que como se menció anteriormente simplemente tenemos que realizar la respectiva configuración sobre
Prisma y el resto va a ser prácticamente lo mismo.

Entonces para iniciar realizaríamos lo siguiente:

	1. Nos dirigimos a: https://vercel.com/
	2. Nos registramos o iniciamos sesión. 
	3. En este caso no vamos a desplegar usando la inerfaz web
	   sino que vamos a usar el CLI de vercel. 
	   Entonces para esto lo vamos a instalar ejecutando el siguiente 
	   comando:
	   		
			npm install -g vercel
	
	4. Luego de tener la CLI instalada vamos a iniciar sesión ejecutando
	   el siguiente comando:

	   		vercel login
		
		Y esto nos va a solicitar a través de que medio vamos a loguear
		y podemos por ejemplo elegir GitHub y se nos va a abrir una ventana
		en el navegador para realizar el proceso.

		Y ya con esto podríamos simplemente desplegarlo.
	
	    OJO: Pero una cosa importante antes de desplegarlo es que como mencionamos 
	         anteriormente es que estabamos usando una base de datos SQLite en 
			 nuestra fase de desarrollo pero para producción debemos usar una 
			 base de datos distinta, que en el caso de Vercel nos provee el 
			 servicio con PostgreSQL por lo tanto debemos reconfigurar Prisma para que
			 use PostgrSQL.
	
	5. Para reconfigurar Prisma lo que va a hacer es lo siguiente:

		* Vamos a borrar la carpeta llamada migrations y el archivo dev.db que se nos habían 
		  creado cuando instalamos e inicializamos Prisma para dejar solo la carpeta llamada
		  prisma y que contiene nuestro archivo schema.prisma el cual contiene nuesto modelo
		  de la DB.

		* A continuación vamos a configurar para ello abrimos nuestro archivo schema.prisma
		  y ahí dentro ubicamos el datasouce. El cual se ve como el siguiente ejemplo:

		  			datasource db {
  						provider = "sqlite"
  						url      = env("DATABASE_URL")
					}

		  		NOTA: Para más información podemos ir a la documentación de Prisma con PostgreSQL 
		  			  en el siguiente enlace: https://www.prisma.io/docs/concepts/database-connectors/postgresql

		  Teniendo en cuenta que el DATABASE_URL es una dirección la cual corresponde a la de la base
		  de datos y que nos va a dar Vercel luego de crearla. 

		  		NOTA: En este caso se menciona Vercel porque es el servicio gratuito que vamos a usar pero 
			    	  hay que tener en cuenta que la dirección URL nos la da nuestra nuestro servidor o 
				  	  servicio de base de datos que tengamos contratado). 
		  
		  	- Por lo tanto para crear la base de datos en Verel nos dirigimos al 
			  dashboard web de Vercel.
			
			- Luego vamos a la pestaña Storage, en la cual vamos a ver una pantalla
			  donde nos dice que podemos crear una base de datos en Redis, poder tener
			  una configuaración más rápida en su red edge, incluso subir archivos o 
			  crear una base de datos en PostgreSQL.
			
			- Ahora para crear la base de datos en PostgeSQL damos click en Create.
			
			- Nos abre otra ventana donde dejamos marcado PostgeSQL y hacemos click
			  en Continue.

			- Luego hacemos click en Accept.

			- A continuación le damos un nombre a la base de datos (Ej: nexttsdb), en
			  la Region usamos la más cercana a los usuarios finales de nuestra 
			  aplicaciónpero como es una app sencilla para aprendizaje entonces la 
			  dejamos por defecto y le damos click en Create.
			
			- Una vez creada nos va a dar la conexión con la cual nos podemos conectar
		
		* Luego de creada la base de datos vemos que en el panel de Vercel tenemos una pestaña
		  llamada Prisma la cual nos da el código que tenemos que copiar para reemplazar el
		  datasouce previamente mencionado y nos quedaría algo similar a lo siguiente:

		  			datasource db {
  						provider = "postgresql"
  						url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  						directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
					}
		
		* Lo siguiente que debemos hacer es configurar las variables de entorno, para ello nos 
		  dirigimos al archivo .env y borramos la línea

			DATABASE_URL="file:./dev.db"
		  
		  Ya que no es una base de datos SQLite.

		* Posteriormente de borrar la línea de código mencionada nos dirigimos nuevamente al dashboard
		  de vercel y en la misma pantalla donde obtuvimos el datasource de prisma vemos que tenemos otra
		  pestaña llamada .env.local a la cual le damos click.
		
		* A continuación en dicha pestaña hay un apartado que dice Show secret al cual le damos para revelar 
		  los secretos.
		  
		* Luego procedemos a copiar la variable de entorno llamada POSTGRES_PRISMA_URL y POSTGRES_URL_NON_POOLING
		  con su respetivo valor y procedemos a pegarla en el archivo .env del proyecto y ya con esto esta la 
		  dirección de la base de datos.
		
		* Y ya con esta configuración nosotros ya podemos volver a genera nuestra base de datos
		  usando el siguiente comando: (Y el cual se mencionó en el archivo NOTAS sobre Prisma)

		  	npx prisma migrate dev --name init
		  
		  Y esto lo que va a hacer es conectarse a la base de datos en la nube de Vercel y crear
		  el modelo.

		  Y adicionalmente también nos va a generar la migrations que borramos al inicio y que contenía
		  la base de datos SQLite en la carpeta local donde tenemos el proyecto.
		
		* Y si nos dirigimos nuevamente al dashboard de Vercel y en el apartdado Data vemos un input que 
		  dice Choose a table y si damos click en él vamos a ver nuestras tablas de base de datos creadas.
		
		NOTA IMPORTANTE: Por ejemplo que pasa si luego de haber generado ya el proceso queremos volver a 
		                 generar el modelo debido a que realizamos alguna modificación en el modelo de una 
					  	 tabla en el schema.prisma, bueno para esto existe un comando que nos permite hacer
						 eso el cual es: 

								npx prisma generate
						 
						 Y esto lo que va a hacer es volver a generar el prisma client, lo va a actualizar
						 para que nuevamente coincida con lo que tenemos en la configuración de prisma 
						 (archivo schema.prisma)

						 De hecho esto lo podemos automatizar agregando el script en el archivo package.json 
                         del proyecto y el cual es el siguiente:

                          	"postinstall": "prisma generate"
                       
                         Y los scripts en el package.json nos quedaría mas o menos como lo siguiente:

                            	"scripts": {
                            	  "dev": "next dev",
                            	  "build": "next build",
                            	  "start": "next start",
                            	  "lint": "next lint",
                            	  "postinstall": "prisma generate"
                            	},
	
	6. El siguiente paso luego de haber configurado Prisma con PostgreSQL y haber realizado las configuraciones
	   mencionadas anteriromente ya podemos subir el proyecto, para el cual ejecutamos el siguiente comando:

			vercel
		
	7. A continuación confirmamos que queremos desplegar el proyecto indicando que si. 
	
	8. Luego nos va a pedir que indiquemos la cuenta sobre la cual vamos a desplegar el proyecto.

	9. Luego nos va a pedir si queremos enlazarlo a un proyecto existente, en este caso indicamos
	   que no ya que previamente no creamos el proyecto.
	
	10. Luego nos pregunta que nombre le queremos colocar y en este caso dejamos el por defecto.

	11. Luego nos pregunta donde esta el diretorio del proyecto, y como estamos ejecutando la terminal
	    desde la misma carpeta del proyecto le damos enter.

	12. Y él va a iniciar a configurar y cargar el código del proyecto.

	13. Luego de realizar un breve proceso nos va a preguntar si queremos modificar las configuraciones
	    a la cual le vamos a indicar que no que lo deje por defeto.

	14. Y listo ya con esto va a iniciar a crear la carpeta .vercel con las configuraciones y también va 
	    a subir el código y desplegarlo.

	15. Y si nos dirigimos a nuestra cuenta en Vercel en la web en el dashboard principal nos vamos a dar
	    cuenta que ya aparece nuestro proyecto al cual si le damos click nos va a mostrar el la información,
		estado y demás parámetros del proyecto.
